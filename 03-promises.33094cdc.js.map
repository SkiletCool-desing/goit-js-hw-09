{"mappings":"AAAgBA,SAASC,cAAc,SAE/BC,iBAAiB,UAEzB,SAAsBC,GACpBA,EAAEC,iBAOF,IALA,IAAMC,EAAUF,EAAEG,OAGdC,GADQC,OAAOH,EAAQI,MAAMC,OACtBF,OAAOH,EAAQE,KAAKG,QAEtBC,EAAI,EAAGA,GAAKN,EAAQO,OAAOF,MAAOC,GAAK,QA8B1BE,KAAKC,UA5BtBC,MAAK,SAAAC,G,IAAGC,EAAQD,EAARC,SAAUR,EAAKO,EAALP,MACjBS,QAAQC,IAAI,uBAAwCC,OAAfH,EAAS,QAAYG,OAANX,EAAM,M,IAE3DY,OAAM,SAAAL,G,IAAGC,EAAQD,EAARC,SAAUR,EAAKO,EAALP,MAClBS,QAAQC,IAAI,sBAAqCC,OAAfH,EAAS,QAAYG,OAANX,EAAM,M,IAGlDF,EAEXF,EAAQiB,O","sources":["src/js/03-promises.js"],"sourcesContent":["const formRef = document.querySelector('.form');\n\nformRef.addEventListener('submit', onSubmitForm);\n\nfunction onSubmitForm(e) {\n  e.preventDefault();\n\n  const formRef = e.target;\n\n  let delay = Number(formRef.delay.value);\n  let step = Number(formRef.step.value);\n\n  for (let i = 1; i <= formRef.amount.value; i += 1) {\n    createPromise(i, delay)\n      .then(({ position, delay }) => {\n        console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n\n    delay += step;\n  }\n  formRef.reset();\n}\n\nfunction createPromise(position, delay) {\n  const obj = { position, delay };\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        \n        resolve(obj);\n      } else {\n        \n        reject(obj);\n      }\n    }, delay);\n  });\n}function createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  if (shouldResolve) {\n    // Fulfill\n  } else {\n    // Reject\n  }\n}\n"],"names":["document","querySelector","addEventListener","e","preventDefault","formRef1","target","step","Number","delay","value","i","amount","Math","random","then","param","position","console","log","concat","catch","reset"],"version":3,"file":"03-promises.33094cdc.js.map"}